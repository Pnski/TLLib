window.$docsify = window.$docsify || {};
window.$docsify.plugins = (window.$docsify.plugins || []).concat(function (hook, vm) {
  console.log("✅ Docsify plugin registered");

  hook.doneEach(async () => {
    const currentPage = vm.route.path;

    // Only run this logic if we're on dd_calc.md
    if (!currentPage.includes("/calculator/dd_calc")) return;

    await preloadSkillData();

    console.log("✅ Executing skill table injection for:", currentPage);

    document.getElementById('openPasteWindow').onclick = () => {
      document.getElementById('pasteOverlay').style.display = 'flex';
    };

    document.getElementById('closePasteWindow').onclick = () => {
      document.getElementById('pasteOverlay').style.display = 'none';
    };

    document.getElementById('parseStats').onclick = () => {
      const text = document.getElementById('statInput').value;
      parseQuestLogStats(text);
      document.getElementById('pasteOverlay').style.display = 'none';
    };

    document.getElementById('parseStats').onclick = () => {
      const text = document.getElementById('statInput').value;
      parseQuestLogStats(text);
      document.getElementById('pasteOverlay').style.display = 'none';
    };
    document.getElementById('parseClipboard').onclick = async () => {
      try {
        const text = await navigator.clipboard.readText();
        document.getElementById('statInput').value = text;
      } catch (err) {
        console.warn("Clipboard access denied:", err);
      }
    }

    const tbody = document.getElementById("table-skills-select");
    if (!tbody || tbody.dataset.generated === "true") return;

    for (let i = 0; i < 12; i++) {
      const tr = document.createElement("tr");

      const tdSkill = document.createElement("td");
      const selectSkill = document.createElement("select");
      selectSkill.id = `skill-${i}`;
      selectSkill.name = "skillSelect";

      tdSkill.appendChild(selectSkill);
      tr.appendChild(tdSkill);

      const tdTrait = document.createElement("td");
      const selectTrait = document.createElement("select");
      selectTrait.id = `trait-${i}`;
      selectTrait.setAttribute("multiple", "multiple");
      tdTrait.appendChild(selectTrait);
      tr.appendChild(tdTrait);

      ["dmg-percent", "dmg-flat", "max-dmg", "avg-dmg", "cooldown", "animlock"].forEach(field => {
        const td = document.createElement("td");
        td.id = `${field}-${i}`;
        td.textContent = "-";
        tr.appendChild(td);
      });
      tbody.appendChild(tr);
      selectTrait.slim = new SlimSelect({
        select: selectTrait,
        data: [
          {
            text: `Select a trait${i}`,
            value: '',
            disabled: true,
            selected: true
          },
        ],
        settings: {
          showSearch: false
        },
        events: {
          afterChange: () => {
            console.log("TraitChange")
          }
        }
      });
      selectSkill.slim = new SlimSelect({
        select: selectSkill,
        data: [
          {
            text: `Select a skill${i}`,
            value: '',
            disabled: true,
            selected: true
          },
        ],
        settings: {
          showSearch: false
        },
        events: {
          afterChange: () => {
            console.log("Skillchange")
          }
        }
      });
    }

    tbody.dataset.generated = "true";
    fillSelectWeapon();
    /* onWeaponChange?.(); */
/* document.querySelectorAll('input:not([name])').forEach(inputField => {
  inputField.oninput = () => {
    document.getElementsByName("skillSelect").forEach((select, index) => {
      for (const i of select.slim.getData()) {
        if (i.selected) {
          SkillCalcNew(i.value, i.data.slot, index);
        }
      }
    });
  };
});
});
});